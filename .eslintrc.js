module.exports = {
  'env': {
    'browser': true,
    'es6': true,
    'node': true,
  },
  'extends': [
    'eslint:recommended',
    'airbnb-typescript/base',
    'plugin:unicorn/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:@angular-eslint/recommended',
    'plugin:@typescript-eslint/recommended',
  ],
  'plugins': [
    '@typescript-eslint',
    'unicorn',
    'import',
    'rxjs',
    '@typescript-eslint/tslint',
    '@angular-eslint/eslint-plugin',
  ],
  'parser': '@typescript-eslint/parser',
  'parserOptions': {
    'project': 'tsconfig.json',
    'sourceType': 'module',
    'createDefaultProgram': true,
  },
  'rules': {
    '@angular-eslint/component-max-inline-declarations': 'error',
    '@angular-eslint/component-selector': [
      'error',
      {
        'type': 'element',
        'prefix': 'kebab-case',
      },
    ],
    '@angular-eslint/contextual-lifecycle': 'error',
    '@angular-eslint/directive-selector': [
      'error',
      {
        'type': 'attribute',
        'prefix': 'camelCase',
      },
    ],
    '@angular-eslint/no-conflicting-lifecycle': 'error',
    '@angular-eslint/no-forward-ref': 'error',
    '@angular-eslint/no-host-metadata-property': 'error',
    '@angular-eslint/no-input-rename': 'error',
    '@angular-eslint/no-inputs-metadata-property': 'error',
    '@angular-eslint/no-output-native': 'error',
    '@angular-eslint/no-output-rename': 'error',
    '@angular-eslint/no-outputs-metadata-property': 'error',
    '@angular-eslint/no-queries-metadata-property': 'error',
    '@angular-eslint/use-lifecycle-interface': 'error',
    '@angular-eslint/use-pipe-transform-interface': 'error',
    '@typescript-eslint/member-ordering': 'error',
    'brace-style': ['error', '1tbs'],
    'import/no-deprecated': 'warn',
    'rxjs/no-async-subscribe': 'error',
    'rxjs/no-create': 'error',
    'rxjs/no-ignored-notifier': 'error',
    'rxjs/no-ignored-replay-buffer': 'error',
    'rxjs/no-index': 'error',
    'rxjs/no-internal': 'error',
    'rxjs/no-nested-subscribe': 'error',
    'rxjs/no-redundant-notify': 'error',
    'rxjs/no-subject-unsubscribe': 'error',
    'rxjs/no-subject-value': 'error',
    'rxjs/no-unbound-methods': 'error',
    'rxjs/no-unsafe-subject-next': 'error',

    'rxjs/no-connectable': 'error',
    'rxjs/no-exposed-subjects': 'error',
    'rxjs/no-subclass': 'error',
    'rxjs/no-unsafe-catch': 'error',
    'rxjs/no-unsafe-first': 'error',
    'rxjs/no-unsafe-switchmap': [
      'error',
      {
        'disallow': ['delete', 'remove'],
        'observable': '[Aa]ction(s|s\\$|\\$)$',
      },
    ],
    'rxjs/no-unsafe-takeuntil': 'error',
    'rxjs/prefer-observer': 'error',
    '@typescript-eslint/tslint/config': [
      'error',
      {
        'lintFile': './tslint.json',
        'rules': {
          'template-banana-in-box': true,
          'template-no-negated-async': true,
          'encoding': true,
          'import-spacing': true,
          'no-mergeable-namespace': true,
          'no-null-undefined-union': true,
          'no-promise-as-boolean': true,
          'no-restricted-globals': true,
          'no-tautology-expression': true,
          'prefer-conditional-expression': true,
          'static-this': true,
          'strict-comparisons': true,
          'strict-string-expressions': true,
          'unnecessary-else': true,
        },
      },
    ],
    '@typescript-eslint/comma-dangle': ['warn', {
      'arrays': 'always-multiline',
      'objects': 'only-multiline',
      'imports': 'always-multiline',
      'exports': 'always-multiline',
      'functions': 'always-multiline',
    }],
    'arrow-body-style': 'warn',
    'implicit-arrow-linebreak': 'warn',
    'padded-blocks': 'warn',
    '@typescript-eslint/quotes': 'warn',
    '@typescript-eslint/indent': [
      'warn',
      4,
      {
        'MemberExpression': 1,
        'FunctionExpression': {'body': 1,'parameters': 'first'},
        'FunctionDeclaration': {'body': 1,'parameters': 1},
        'SwitchCase': 1,
      },
    ],
    '@typescript-eslint/semi': 'warn',
    'no-console': [
      'error',
      {
        'allow': [
          'log',
          'warn',
          'dir',
          'timeLog',
          'assert',
          'clear',
          'count',
          'countReset',
          'group',
          'groupEnd',
          'table',
          'dirxml',
          'error',
          'groupCollapsed',
          'Console',
          'profile',
          'profileEnd',
          'timeStamp',
          'context',
        ],
      },
    ],
    'max-len': [
      'error',
      {
        'code': 350,
      },
    ],
    '@typescript-eslint/member-delimiter-style': ['warn',
      {
        'multiline': {
          'delimiter': 'semi',
          'requireLast': true,
        },
        'singleline': {
          'delimiter': 'comma',
          'requireLast': false,
        },
      },
    ],
    // Disabled rules
    'quotes': 'off',
    'object-curly-spacing': 'off',
    'object-curly-newline': 'off',
    'no-underscore-dangle': 'off',
    'no-return-assign': 'off',
    'no-plusplus': 'off',
    'linebreak-style': 'off',
    'consistent-return': 'off',
    'no-continue': 'off',
    'array-callback-return': 'off',
    'no-sequences': 'off',
    'default-case': 'off',
    'class-methods-use-this': 'off',
    'object-shorthand': 'off',
    'prefer-template': 'off',
    'prefer-destructuring': 'off',
    'guard-for-in': 'off',
    'no-param-reassign': 'off',
    'no-prototype-builtins': 'off',
    'unicorn/no-null': 'off',
    'unicorn/no-reduce': 'off',
    'unicorn/no-abusive-eslint-disable': 'off',
    'unicorn/prevent-abbreviations': 'off',
    'unicorn/explicit-length-check': 'off',
    'unicorn/no-fn-reference-in-iterator': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/lines-between-class-members': 'off',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/prefer-regexp-exec': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/no-unused-expressions': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/dot-notation': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/no-extra-semi': 'off',
    '@typescript-eslint/object-curly-spacing': 'off',
    'import/prefer-default-export': 'off',
    'import/no-cycle': 'off',
    'import/no-extraneous-dependencies': 'off',
  },
};
